create Feedback Table with id autoincrement, name varchar, email varchar, 
feedback varchar.

once it is creted create Entity, DAO and Controller as mentioned.

for database configuration need to update application.properties file
_________________________________________________________________________

package com.simplilearn.feedback;

public class FeedbackEntity {

	private int id;
	private String name;
	private String email;
	private String feedback;
	public int getId() {
		return id;
	}
	public void setId(int id) {
		this.id = id;
	}
	public String getName() {
		return name;
	}
	public void setName(String name) {
		this.name = name;
	}
	public String getEmail() {
		return email;
	}
	public void setEmail(String email) {
		this.email = email;
	}
	public String getFeedback() {
		return feedback;
	}
	public void setFeedback(String feedback) {
		this.feedback = feedback;
	}
	
}

_______________________________________________________________________________
package com.simplilearn.feedback;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;


@Repository
public class FeedbackDao {

	@Autowired
	private JdbcTemplate jdbcTemplate;

	public int addFeedback(FeedbackEntity feedback) {
		
		return jdbcTemplate.update("insert into feedback (name,email,feedback)"
				+ " values (?,?,?) ", feedback.getName(),feedback.getEmail(),
				feedback.getFeedback());
	}
}

______________________________________________________________________________

package com.simplilearn.feedback;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
public class FeedbackController {

	@Autowired
	FeedbackDao dao;
	
	@PostMapping("/feedback")
	public ResponseEntity<Object> addFeedback(@RequestBody FeedbackEntity fb){
		
		int x= dao.addFeedback(fb);
		
		if(x>0)
			return new ResponseEntity<Object>("Data Inserted",HttpStatus.CREATED);
		else
			return new ResponseEntity<Object>("Data not inserted",
					HttpStatus.INTERNAL_SERVER_ERROR);
	}
}


______________________________________________________________________________

In main method file just update @ComponentScan

______________________________________________________________________________


update application.properties

spring.datasource.username=root
spring.datasource.password=Sonam@123
spring.datasource.url=jdbc:mysql://localhost:3306/ecommerce

______________________________________________________________________________


run your application



open postman
----------------------------------------------

new request --> change method from get to post --> paste url localhost:8080/feedback

below select params in that select body --> below you can see multiple values from that select raw  ----> from text drop down select JSON

in below box type data which you want to insert in JSON format
{
	"name":"sonam",
	"email":"sonam@gmail.com",
	"feedback":"nice, i liked the most"
}

click on send button and check the response.

also check the updated database.






